% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/att_estimate.R
\name{ATTEffBounds}
\alias{ATTEffBounds}
\title{Efficiency bounds for confidence intervals}
\usage{
ATTEffBounds(op, C = 1, beta = 0.8, alpha = 0.05, sigma2, J = 3, DM)
}
\arguments{
\item{op}{The output of \code{ATTOptPath}.}

\item{C}{Lipschitz smoothness constant}

\item{beta}{quantile \code{beta} of excess length for determining performance
of one-sided CIs.}

\item{alpha}{determines confidence level, \code{1-alpha}.}

\item{sigma2}{estimate of the conditional variance of the outcome (assuming
homoskedasticity). If not supplied, use homoskedastic variance estimate
based on a nearest neighbor variance estimator.}

\item{J}{number of nearest neighbors to use when estimating \code{sigma2}.}

\item{DM}{distance matrix with dimension \code{n} by \code{n} to determine
nearest neighbors when when estimating \code{sigma2}.}
}
\value{
A list with two elements, \code{onesided} and \code{twosided}, for
    one- and two-sided efficiency.
}
\description{
Computes the asymptotic efficiency of two-sided fixed-length confidence
intervals at smooth functions, as well as the efficiency of one-sided
confidence intervals that optimize a given \code{beta} quantile of excess
length, using the formula described in Appendix A of Armstrong and Kolesár
(2020)
}
\examples{
## Use NSW experimental subsample with 25 treated and untreated units
dt <- NSWexper[c(1:25, 421:445), ]
Ahalf <- diag(c(0.15, 0.6, 2.5, 2.5, 2.5, 0.5, 0.5, 0.1, 0.1))
D0 <- distMat(dt[, 2:10], Ahalf, method="manhattan", dt$treated)
## Distance matrix for variance estimation
DM <- distMat(dt[, 2:10], Ahalf, method="manhattan")
## Compute the solution path, first 50 steps will be sufficient
op <- ATTOptPath(dt$re78, dt$treated, D0, maxsteps=50)
ATTEffBounds(op, C=1, DM=DM)
}
\references{
\cite{Armstrong, T. B., and M. Kolesár (2020): Finite-Sample
    Optimal Estimation and Inference on Average Treatment Effects Under
    Unconfoundedness, \url{https://arxiv.org/abs/1712.04594}}
}
