% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/att_estimate.R
\name{ATTOptEstimate}
\alias{ATTOptEstimate}
\title{Optimal estimation and inference for the CATT}
\usage{
ATTOptEstimate(
  op,
  sigma2,
  C = 1,
  sigma2final = sigma2,
  alpha = 0.05,
  beta = 0.8,
  opt.criterion = "RMSE"
)
}
\arguments{
\item{op}{Output of \code{ATTOptPath}.}

\item{sigma2}{Estimate of the conditional variance of the outcome, used to
optimize the number of matches.}

\item{C}{Lipschitz smoothness constant}

\item{sigma2final}{vector of variance estimates with length \code{n} for
determining the standard error of the optimal estimator. In contrast,
\code{sigma2} is used only for determining the optimal tuning parameter.}

\item{alpha}{Level of confidence interval, \code{1-alpha}.}

\item{beta}{The quantile \code{beta} of excess length for determining
performance of one-sided CIs.}

\item{opt.criterion}{One of \code{"RMSE"} (root mean squared error),
\code{"OCI"} (one-sided confidence intervals), \code{"FLCI"}
(fixed-length two-sided confidence intervals)}
}
\value{
Returns an object of class \code{"ATTEstimate"}. An object of class
    \code{"ATTEstimate"} is a list containing the following components:
\describe{
\item{e}{Data frame with columns TODO}
\item{k}{weights TODO}
}
}
\description{
Computes the estimator and confidence intervals (CIs) for the CATT. The
tuning parameter is chosen to optimize \code{opt.criterion} criterion.
}
\examples{
Ahalf <- diag(c(0.15, 0.6, 2.5, 2.5, 2.5, 0.5, 0.5, 0.1, 0.1))
## Use NSW experimental subsample with 30 treated and untreated units
dt <- NSWexper[c(1:20, 426:445), ]
D0 <- distMat(dt[, 2:10], Ahalf, method="manhattan", dt$treated)
## Distance matrix for variance estimation
DM <- distMat(dt[, 2:10], Ahalf, method="manhattan")
sigma2 <- nnvar(DM, dt$treated, dt$re78, J=3)
## Compute the solution path, first 50 steps will be sufficient
op <- ATTOptPath(dt$re78, dt$treated, D0, maxsteps=50)
ATTOptEstimate(op, mean(sigma2), C=1, sigma2final=sigma2,
               opt.criterion="RMSE")
ATTOptEstimate(op, mean(sigma2), C=1, sigma2final=sigma2,
               opt.criterion="FLCI")
}
